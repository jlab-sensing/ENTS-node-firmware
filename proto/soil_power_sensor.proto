/* @brief Implements serialization for measurements on the Soil Power Sensor
 * 
 * Each individual measurement has all identifying information for someone to
 * determine when the measurement happened, who performed the measurement, what
 * was being measured, and the measurement itself. In the scheme of the Soil
 * Power Sensor, single measurements are taken, then saved to NVRAM for a later
 * upload. This was perferred over using "repeated" types as the data would have
 * to be uploaded in blocks of LoRaWAN due to payload size limitations.
 * 
 * @author John Madden <jmadden173@pm.me>
 * @date 2023-11-21
 */

syntax = "proto3";

/* Data shared between all measurement messages */
message MeasurementMetadata {
  // id of the cell measured
  uint32 cell_id = 1;
  // id of the logging device
  uint32 logger_id = 2;
  // timestamp of the measurement
  uint32 ts = 3;
}

/* Power measurement message. Voltage and current can be digitially combined to
 * obtain power. */
message PowerMeasurement {
  // voltage
  double voltage = 2;
  // current
  double current = 3;
}

/* Teros12 measurement message */
message Teros12Measurement {
  // raw volumetric water content
  double vwc_raw = 2;
  // calibrated volumetric water content
  double vwc_adj = 3;
  // temperature in celcious
  double temp = 4;
  // electrical conductivity
  uint32 ec = 5;
}

/* Phytos measurement */
message Phytos31Measurement {
  // raw adc voltage
  double voltage = 1;
  // calibrated leaf wetness
  double leaf_wetness = 2;
}

message BME280Measurement {
  // pressure
  uint32 pressure = 1;
  // temperature
  int32 temperature = 2;
  // humidity
  uint32 humidity = 3;
}

/* Top level measurement message */
message Measurement {
  // Metadata
  MeasurementMetadata meta = 1;

  // Possible measurements
  oneof measurement {
    PowerMeasurement power = 2;
    Teros12Measurement teros12 = 3;
    Phytos31Measurement phytos31 = 4;
    BME280Measurement bme280 = 5;
  }
}

/* Acknowledge Packet */
message Response {
  /* Response codes from server */
  enum ResponseType {
    /* Data was successfully uploaded */
    SUCCESS = 0;
    /* General Error */
    ERROR = 1;
  }

  /* Response from server */
  ResponseType resp = 1; 
}

message UserConfiguration {
  /********** Upload Settings **********/
  uint32 logger_id = 1; // id of the logging device
  uint32 cell_id = 2;   // id of the cell measured
  Uploadmethod Upload_method = 3; // indicates whether LoRa or WiFi is used
  uint32 Upload_interval = 4; // upload time in seconds

  /********** Measurement Settings **********/
  repeated EnabledSensor enabled_sensors = 5; // List of enabled sensors
  double Voltage_Slope = 6; // Calibration slope for voltage
  double Voltage_Offset = 7; // Calibration offset for voltage
  double Current_Slope = 8; // Calibration slope for current
  double Current_Offset = 9; // Calibration offset for current

  /********** WiFi Settings **********/
  string WiFi_SSID = 10;
  string WiFi_Password = 11;
  string API_Endpoint_URL = 12;
  uint32 API_Endpoint_Port = 13;
}

enum EnabledSensor {
  Voltage = 0;
  Current = 1;
  Teros12 = 2;
  Teros21 = 3;
  BME280 = 4;
}

enum Uploadmethod {
  LoRa = 0;
  WiFi = 1;
}