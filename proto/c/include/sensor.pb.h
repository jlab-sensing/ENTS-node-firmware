/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_SENSOR_PB_H_INCLUDED
#define PB_SENSOR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _SensorType {
    /* * Onboard power measurements */
    SensorType_POWER_VOLTAGE = 0,
    SensorType_POWER_CURRENT = 1,
    /* * Teros12 measurements */
    SensorType_TEROS12_VWC = 2,
    SensorType_TEROS12_TEMP = 3,
    SensorType_TEROS12_EC = 4,
    /* * Phytos31 measurements */
    SensorType_PHYTOS31_VOLTAGE = 5,
    SensorType_PHYTOS31_LEAF_WETNESS = 6,
    /* * Bme280 measurements */
    SensorType_BME280_PRESSURE = 7,
    SensorType_BME280_TEMP = 8,
    SensorType_BME280_HUMIDITY = 9
} SensorType;

/* Struct definitions */
typedef struct _Metadata {
    /* id of the cell measured */
    uint32_t cell_id;
    /* id of the logging device */
    uint32_t logger_id;
    /* timestamp of the measurement */
    uint32_t ts;
} Metadata;

typedef struct _FullSensorMeasurement {
    pb_size_t which_measurement;
    union {
        uint64_t unsigned_int;
        int64_t signed_int;
        double floating_point;
        pb_callback_t text;
    } measurement;
} FullSensorMeasurement;

typedef struct _DeltaSensorMeasurement {
    pb_size_t which_delta;
    union {
        int64_t signed_int;
        double floating_point;
    } delta;
} DeltaSensorMeasurement;

typedef struct _SensorMeasurement {
    /* * Metadata for the measurement */
    bool has_meta;
    Metadata meta;
    /* * Type of sensor measurement */
    SensorType type;
    pb_size_t which_measurement;
    union {
        FullSensorMeasurement full;
        DeltaSensorMeasurement delta;
    } measurement;
} SensorMeasurement;

typedef struct _RepeatedSensorMeasurement {
    /* * Metadata for all measurements */
    bool has_meta;
    Metadata meta;
    /* * List of sensor measurements */
    pb_callback_t measurements;
} RepeatedSensorMeasurement;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _SensorType_MIN SensorType_POWER_VOLTAGE
#define _SensorType_MAX SensorType_BME280_HUMIDITY
#define _SensorType_ARRAYSIZE ((SensorType)(SensorType_BME280_HUMIDITY+1))




#define SensorMeasurement_type_ENUMTYPE SensorType



/* Initializer values for message structs */
#define Metadata_init_default                    {0, 0, 0}
#define FullSensorMeasurement_init_default       {0, {0}}
#define DeltaSensorMeasurement_init_default      {0, {0}}
#define SensorMeasurement_init_default           {false, Metadata_init_default, _SensorType_MIN, 0, {FullSensorMeasurement_init_default}}
#define RepeatedSensorMeasurement_init_default   {false, Metadata_init_default, {{NULL}, NULL}}
#define Metadata_init_zero                       {0, 0, 0}
#define FullSensorMeasurement_init_zero          {0, {0}}
#define DeltaSensorMeasurement_init_zero         {0, {0}}
#define SensorMeasurement_init_zero              {false, Metadata_init_zero, _SensorType_MIN, 0, {FullSensorMeasurement_init_zero}}
#define RepeatedSensorMeasurement_init_zero      {false, Metadata_init_zero, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define Metadata_cell_id_tag                     1
#define Metadata_logger_id_tag                   2
#define Metadata_ts_tag                          3
#define FullSensorMeasurement_unsigned_int_tag   1
#define FullSensorMeasurement_signed_int_tag     2
#define FullSensorMeasurement_floating_point_tag 3
#define FullSensorMeasurement_text_tag           4
#define DeltaSensorMeasurement_signed_int_tag    1
#define DeltaSensorMeasurement_floating_point_tag 2
#define SensorMeasurement_meta_tag               1
#define SensorMeasurement_type_tag               2
#define SensorMeasurement_full_tag               3
#define SensorMeasurement_delta_tag              4
#define RepeatedSensorMeasurement_meta_tag       1
#define RepeatedSensorMeasurement_measurements_tag 2

/* Struct field encoding specification for nanopb */
#define Metadata_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   cell_id,           1) \
X(a, STATIC,   SINGULAR, UINT32,   logger_id,         2) \
X(a, STATIC,   SINGULAR, UINT32,   ts,                3)
#define Metadata_CALLBACK NULL
#define Metadata_DEFAULT NULL

#define FullSensorMeasurement_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UINT64,   (measurement,unsigned_int,measurement.unsigned_int),   1) \
X(a, STATIC,   ONEOF,    SINT64,   (measurement,signed_int,measurement.signed_int),   2) \
X(a, STATIC,   ONEOF,    DOUBLE,   (measurement,floating_point,measurement.floating_point),   3) \
X(a, CALLBACK, ONEOF,    STRING,   (measurement,text,measurement.text),   4)
#define FullSensorMeasurement_CALLBACK pb_default_field_callback
#define FullSensorMeasurement_DEFAULT NULL

#define DeltaSensorMeasurement_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    SINT64,   (delta,signed_int,delta.signed_int),   1) \
X(a, STATIC,   ONEOF,    DOUBLE,   (delta,floating_point,delta.floating_point),   2)
#define DeltaSensorMeasurement_CALLBACK NULL
#define DeltaSensorMeasurement_DEFAULT NULL

#define SensorMeasurement_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  meta,              1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (measurement,full,measurement.full),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (measurement,delta,measurement.delta),   4)
#define SensorMeasurement_CALLBACK NULL
#define SensorMeasurement_DEFAULT NULL
#define SensorMeasurement_meta_MSGTYPE Metadata
#define SensorMeasurement_measurement_full_MSGTYPE FullSensorMeasurement
#define SensorMeasurement_measurement_delta_MSGTYPE DeltaSensorMeasurement

#define RepeatedSensorMeasurement_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  meta,              1) \
X(a, CALLBACK, REPEATED, MESSAGE,  measurements,      2)
#define RepeatedSensorMeasurement_CALLBACK pb_default_field_callback
#define RepeatedSensorMeasurement_DEFAULT NULL
#define RepeatedSensorMeasurement_meta_MSGTYPE Metadata
#define RepeatedSensorMeasurement_measurements_MSGTYPE SensorMeasurement

extern const pb_msgdesc_t Metadata_msg;
extern const pb_msgdesc_t FullSensorMeasurement_msg;
extern const pb_msgdesc_t DeltaSensorMeasurement_msg;
extern const pb_msgdesc_t SensorMeasurement_msg;
extern const pb_msgdesc_t RepeatedSensorMeasurement_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Metadata_fields &Metadata_msg
#define FullSensorMeasurement_fields &FullSensorMeasurement_msg
#define DeltaSensorMeasurement_fields &DeltaSensorMeasurement_msg
#define SensorMeasurement_fields &SensorMeasurement_msg
#define RepeatedSensorMeasurement_fields &RepeatedSensorMeasurement_msg

/* Maximum encoded size of messages (where known) */
/* FullSensorMeasurement_size depends on runtime parameters */
/* SensorMeasurement_size depends on runtime parameters */
/* RepeatedSensorMeasurement_size depends on runtime parameters */
#define DeltaSensorMeasurement_size              11
#define Metadata_size                            18
#define SENSOR_PB_H_MAX_SIZE                     Metadata_size

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
